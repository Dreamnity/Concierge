var d={},f={};function hb(){this.ia=true}const g=new (require('ws')).WebSocketServer({port:8E3});g.on("connection",e=>{e.ia=1;let a=Buffer.from(((e._socket.address().address+[...g.clients.values()].findIndex(b=>b===e)).toString(16)+Math.floor((1+Math.random())*0x10000).toString(16).substring(1)).split('').filter(e=>/[0-9a-fA-F]/g.test(e)).join('').toUpperCase(),'hex').toString('base64url');d[a]=a;f[a]=e;console.log("Connected: %s",a);e.on("message",b=>{var c;try{c=JSON.parse(b);}catch(j){return e.send('{"error":"invalid payload","detailed":"'+j.message+'"}')}"object"!==typeof c&&e.send('{"error":"invalid payload"}');c.newName&&((Object.values(d).includes(c.newName)&&d[a]!==c.newName)?e.send('{"error":"duplicated name"}'):(()=>{b=d[a],d[a]=c.newName,b!==c.newName&&console.log("Name changed: %s => %s",b,d[a])})());if(c.target&&c.message){b=Object.keys(d).find(h=>d[h]===c.target);b='@a'===c.target?{send:msg=>g.clients.forEach(ws=>ws.send(msg))}:c.target.startsWith('@r[')?{send:msg=>g.clients.forEach(ws=>d[Object.keys(f).find(e=>f[e]===ws)].match(new RegExp(...((gr)=>(gr[3]?[gr[3]]:[gr[1]||'^$',gr[2]]))(c.target.match(/@r(?:\[(.+),((?:[gmiyuvsd]){1,8})\]|\[(.+)\])/)))!==null&&ws.send(msg)))}:f[b]||f[c.target];if(!b)return e.send('{"error":"invalid target"}');b.send(JSON.stringify({origin:d[a],message:c.message}));console.log("Sent: %s => %s: %s",d[a],c.target,c.message)}else(c.target||c.message)&&e.send('{"error":"invalid payload"}')}).on("close",()=>{delete d[a];delete f[a];console.log("Closed: %s",a)}).on('pong',hb)});setInterval(()=>g.clients.forEach(ws=>ws.ia?ws.ping((ws.ia=0)||null):ws.terminate()),30000)